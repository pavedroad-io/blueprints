{{define "preflight.sh"}}#!/bin/bash

defaultDirectory="."
prInitFile=".pr_git_initialize_file"
ghToken="GH_ACCESS_TOKEN"
needGHTOKEN='
A GitHub Personal Access Token (PAT) is requried

Please see

https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line

then use

$ export GH_ACCESS_TOKEN=your_pat

before continuing
'

makeInitFile()
{
	target=$prInitFile
	if [[ "$defaultDirectory" != "." ]]
	then
		target="$defaultDirectory/$prInitFile"
	fi
	cat << EOF > $target
Initial file for git commit generated by roadctl
feel free to delete
EOF
  echo "creating: $prInitFile"
}

initRepo()
{
	if [[ "$defaultDirectory" == "." ]]
	then
		git rev-parse --is-inside-work-tree
		if [ $? -eq 0 ]
		then
				return "already git repo"
		fi
		git init
	else
		(cd $defaultDirectory;git rev-parse --is-inside-work-tree)
		if [ $? -eq 0 ]
		then
				return
		fi
		(cd $defaultDirectory;git init)
	fi
}

addFile()
{
	if [[ "$defaultDirectory" == "." ]]
	then
		git add $prInitFile
	else
		(cd $defaultDirectory;git add $prInitFile)
	fi
  echo "adding: $prInitFile"
}

commit()
{
	if [[ "$defaultDirectory" == "." ]]
	then
		out=(git commit -m "Initial commit of $prInitFile")
	else
		(cd $defaultDirectory;git commit -m "Initial commit of $prInitFile")
	fi
  echo "commit: $prInitFile"
}

checkUser()
{
	git config --global user.name > /dev/null

	if [ $? -ne 0 ]
	then
		read -p "Enter git user.name: " gituser
		git config --global user.name $gituser
	fi
}

checkEmail()
{
	git config --global user.email > /dev/null

	if [ $? -ne 0 ]
	then
		read -p "Enter git user.email: " gitemail
		git config --global user.email $gitemail
	fi
}

checkRepository()
{
	makeInitFile
	initRepo
	addFile
  commit
}

gitCheck()
{
	checkUser
	checkEmail
	checkRepository
}

githubCheck()
{
	if [[ -z "${GH_ACCESS_TOKEN}" ]]
	then
				echo "$needGHTOKEN"
				exit -1
	else
				return
	fi
}

usage()
{
	echo "usage: preflight.sh -d"
	echo "		-d directory to test against, default is current "
}

## Main
while [ "$1" != "" ]; do
	case $1 in
		-d ) shift
			defaultDirectory=$1
			;;
	-h | --help ) usage
		exit
		;;
	* ) shift
		;;
	esac
done

gitCheck
githubCheck
{{end}}
