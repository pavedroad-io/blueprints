community:
  community-files:
  - name: CODE_OF_CONDUCT.md
    path: .
    src: blueprintdir
  - name: CONTRIBUTING.md
    path: .
    src: blueprintdir
  - name: GOVERNANCE.md
    path: .
    src: blueprintdir
  - name: MEETING.md
    path: .
    src: blueprintdir
  - name: OWNERS.md
    path: .
    src: blueprintdir
  - name: SECURITY.md
    path: .
    src: blueprintdir
  - md5: "123123123123123123231"
    name: SUPPORT.md
    path: .
    src: git-api://blueprints.pavedroad.io/blueprints/oss/support.md
  - name: ROADMAP.md
    path: .
    src: https://w.pavedroad.io/blueprints/roadmap.md
  - name: SECURITY.md
    path: .
    src: blueprintdir
  - name: ROADMAP.md
    path: .
    src: https://w.pavedroad.io/blueprints/roadmap.md
  description: list of community files to include
info:
  api-version: 1.0.0
  id: datamgr
  name: users
  organization: acme-demo
  release-status: alpha
  version: 1.0.0
project:
  go:
    dependency-manager: dep
  kubernetes:
    namespace: pavedroad
    liveness: liveness
    readiness: ready
    metrics: metrics
    management: management
  dependencies:
  - command: start --insecure
    comments: map http port to 6060 to avoid conflict with k8s
    docker-cockroahdb: null
    image: cockroachdb/cockroach:1.12
    name: cockroachdb
    ports:
    - external: "26257"
      internal: "26257"
    - external: "6060"
      internal: "8080"
    volumes: []
  - command: start --insecure
    comments: used for events
    docker-kafka: null
    image: wurstmeister/kafka
    name: kafka
    ports:
    - external: "9094"
      internal: "9092"
    topics:
    - topic:
      value: "microservice-emit"
      partitions: 3
      replication: 1
    - topic:
      value: "microservice-consume"
      partitions: 3
      replication: 1
    volumes: []
  description: Microservice for managing a back end persistent store for an object
  top_level_domain: "api.pavedroad.io"
  scheduler_name: ""
  integrations:
  - name: fossa
    shields:
    - "quality_gate"
    enable: true
  - name: go
    shields:
    - "report_card"
    enable: true
  - name: sonarcloud
    enable: true
    sonar-cloud-config:
      key: "test"
      login: "3faaf04fd0f66a33ced5dea109847fa3dc6d40a4"
      options:
        shields:
        - "bugs"
        - "code_smells"
        - "coverage"
        - "duplicated_lines_density"
        - "ncloc"
        - "sqale_rating"
        - "alert_status"
        - "reliability_rating"
        - "security_rating"
        - "sqale_index"
        - "vulnerabilities"
        coverage: {enable: true, report: $ref->go.coverage.artifacts}
        go-sec: {enable: true, report: $ref->go.sec.artifacts}
        lint: {enable: true, report: $ref->go.lint.artifacts}
    configuration-file: {artifacts-dir: ./artifacts, name: sonar-project.properties,
      path: ., src: blueprintdir}
  license: Apache2
  maintainer:
    email: foo@bar.com
    name: goffy
    slack: pavedroad.slack.com
    web: http://www.foo.bar
  project-files:
  - description: Information about the project and project status
    name: README.md
    path: .
    src: blueprintdir
  - description: Summary documentation in swagger 2.0 and godoc format
    name: blueprintDoc.go
    path: .
    src: blueprintdir
  - description: Main entry point for microservice
    name: blueprintMain.go
    path: .
    src: blueprintdir
  - description: Business logic for the application
    name: blueprintApp.go
    path: .
    src: blueprintdir
  - description: Generated data model for the microservice
    name: blueprintModel.go
    path: .
    src: blueprintdir
  - description: Generated test cases for microservice
    name: blueprint_test.go
    path: .
    src: blueprintdir
tables:
- columns:
  - constraints: ""
    mapped-name: id
    modifiers: ""
    name: id
    type: string
  - constraints: ""
    mapped-name: title
    modifiers: ""
    name: title
    type: string
  - constraints: ""
    mapped-name: updated
    modifiers: ""
    name: updated
    type: time
  - constraints: ""
    mapped-name: created
    modifiers: ""
    name: created
    type: time
  parent-tables: ""
  table-name: users
  table-type: jsonb
- columns:
  - constraints: ""
    mapped-name: id
    modifiers: ""
    name: id
    type: string
  parent-tables: users
  table-name: metadata
- columns:
  - constraints: ""
    mapped-name: key
    modifiers: ""
    name: key
    type: string
  parent-tables: metadata
  table-name: test
